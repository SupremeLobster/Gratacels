void Solucio::calcularMatriuSumes() { // ALGORISME VORAÃ‡

    for(int k=0; k<mida*mida; k++) {
        vector<vector<bool>> aux_aFiles = aFiles, aux_aColumnes = aColumnes; // S'ACABA D'INICIALITZAR TOT A 'false'
        vector<int> aux_alcades = alcades;
        int suma = 0;

        for(int i=0; i<mida*mida-k; i++) {
            int fil = i/mida;
            int col = i%mida;
            int j = aMax;

            while( j>0 && (aux_alcades[j]<=0 || aux_aFiles[fil][j] || aux_aColumnes[col][j]) ) j--;

            if(j > 0) {
                aux_aFiles[fil][j] = true;
                aux_aColumnes[col][j] = true;
            }
            else {
                j = aMax;
                while(j>0 && aux_alcades[j]<=0) j--;
            }

            aux_alcades[j]--;
            suma += j;
        }

        matSumes.push_back(suma);
    }
}